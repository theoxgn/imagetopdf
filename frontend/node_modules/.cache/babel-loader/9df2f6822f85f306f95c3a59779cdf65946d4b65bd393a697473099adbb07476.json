{"ast":null,"code":"var _jsxFileName = \"/Users/theoxgn/Kerja/Node/pdf/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const fileArray = Array.from(e.target.files).sort((a, b) => a.name.localeCompare(b.name));\n    setFiles(fileArray);\n  };\n  const handleUpload = async () => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('images', file);\n      });\n      const response = await axios.post('http://localhost:3001/convert', formData, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'converted.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Terjadi kesalahan saat mengkonversi file');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Image to PDF Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        className: \"border p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-5\",\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading || files.length === 0,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded disabled:bg-gray-400\",\n      children: loading ? 'Converting...' : 'Convert to PDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6uMhM5u4oHV99yLoOUzHkqe35hc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","files","setFiles","loading","setLoading","handleFileChange","e","fileArray","Array","from","target","sort","a","b","name","localeCompare","handleUpload","formData","FormData","forEach","file","append","response","post","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","accept","onChange","length","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/theoxgn/Kerja/Node/pdf/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (e) => {\n    const fileArray = Array.from(e.target.files).sort((a, b) => \n      a.name.localeCompare(b.name)\n    );\n    setFiles(fileArray);\n  };\n\n  const handleUpload = async () => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      files.forEach((file) => {\n        formData.append('images', file);\n      });\n\n      const response = await axios.post('http://localhost:3001/convert', formData, {\n        responseType: 'blob',\n      });\n\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'converted.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Terjadi kesalahan saat mengkonversi file');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Image to PDF Converter</h1>\n      \n      <div className=\"mb-4\">\n        <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          className=\"border p-2\"\n        />\n      </div>\n\n      {files.length > 0 && (\n        <div className=\"mb-4\">\n          <h2 className=\"text-lg font-semibold mb-2\">Selected Files:</h2>\n          <ul className=\"list-disc pl-5\">\n            {files.map((file, index) => (\n              <li key={index}>{file.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <button\n        onClick={handleUpload}\n        disabled={loading || files.length === 0}\n        className=\"bg-blue-500 text-white px-4 py-2 rounded disabled:bg-gray-400\"\n      >\n        {loading ? 'Converting...' : 'Convert to PDF'}\n      </button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}